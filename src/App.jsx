import React, { useState } from 'react';
import { Users, DollarSign, TrendingUp, Database, Server, Megaphone, UserCog, AlertCircle, ChevronDown, ChevronUp, ChevronsUpDown, FileCode } from 'lucide-react';
// ZMƒöNA: Importujeme lok√°ln√≠ obr√°zek diagramu
import dwhDiagram from './assets/DWH.png';

const MagicalMoneyDashboard = () => {
  const [expandedDepts, setExpandedDepts] = useState([]);
  const [currentPage, setCurrentPage] = useState('org'); // 'org', 'dwh', nebo 'inmon'

  const departments = [
    {
      name: 'Schvalov√°n√≠',
      icon: <Users className="w-5 h-5" />,
      color: 'bg-blue-100 border-blue-300',
      textColor: 'text-blue-800',
      applications: ['Z√°kaznick√Ω port√°l', 'CRM', 'Emailov√© a komunikaƒçn√≠ syst√©my'],
      dataObjects: ['Osoba (≈æadatel)', '√övƒõrov√° ≈æ√°dost', 'Smlouva', 'Schvalovac√≠ v√Ωsledek'],
      capabilities: ['Vyhodnocen√≠ ≈æ√°dost√≠', 'Schvalov√°n√≠']
    },
    {
      name: 'Sales',
      icon: <TrendingUp className="w-5 h-5" />,
      color: 'bg-green-100 border-green-300',
      textColor: 'text-green-800',
      applications: ['CRM', 'Z√°kaznick√Ω port√°l'],
      dataObjects: ['Osoba (prospekt / z√°kazn√≠k)', 'Kontakt', 'Obchodn√≠ p≈ô√≠pady'],
      capabilities: ['Osobn√≠ kontakt se z√°kazn√≠ky', 'Akvizice nov√Ωch klient≈Ø']
    },
    {
      name: 'Marketing',
      icon: <Megaphone className="w-5 h-5" />,
      color: 'bg-yellow-100 border-yellow-300',
      textColor: 'text-yellow-800',
      applications: ['CRM', 'Web platforma', 'Soci√°ln√≠ s√≠tƒõ', 'PPC n√°stroje'],
      dataObjects: ['Osoba (prospekt / z√°kazn√≠k)', 'Kampa≈à', 'Webov√Ω obsah'],
      capabilities: ['Propagace znaƒçky', 'Tvorba a vyhodnocov√°n√≠ kampan√≠', 'Spr√°va affiliate a digit√°ln√≠ch kan√°l≈Ø']
    },
    {
      name: 'Customer Care + Vym√°h√°n√≠',
      icon: <AlertCircle className="w-5 h-5" />,
      color: 'bg-orange-100 border-orange-300',
      textColor: 'text-orange-800',
      applications: ['Core syst√©m', 'Kontaktn√≠ z√°kaznick√© centrum', 'CRM'],
      dataObjects: ['Osoba (dlu≈æn√≠k)', 'Pohled√°vka', 'DPD', 'Stav vym√°h√°n√≠'],
      capabilities: ['Efektivn√≠ komunikace s dlu≈æn√≠ky', '≈ò√≠zen√≠ inkasa', 'Spolupr√°ce s extern√≠mi agenturami']
    },
    {
      name: 'HR',
      icon: <UserCog className="w-5 h-5" />,
      color: 'bg-purple-100 border-purple-300',
      textColor: 'text-purple-800',
      applications: ['HR management syst√©m'],
      dataObjects: ['Osoba (zamƒõstnanec)', 'Mzda', 'P≈ô√≠stupov√° role'],
      capabilities: ['P√©ƒçe o zamƒõstnance', 'Zpracov√°n√≠ mezd', '≈†kolen√≠ a rozvoj']
    },
    {
      name: 'Payments',
      icon: <DollarSign className="w-5 h-5" />,
      color: 'bg-emerald-100 border-emerald-300',
      textColor: 'text-emerald-800',
      applications: ['Z√°kaznick√Ω port√°l', 'Spr√°va plateb', 'ERP'],
      dataObjects: ['Transakce', 'Osoba (klient √∫ƒçet)', 'Stav spl√°tky', 'Z√°znam o prodlen√≠ (DPD)'],
      capabilities: ['Spr√°va plateb', 'Kontrola cashflow', 'Dohled√°n√≠ a p√°rov√°n√≠ transakc√≠']
    },
    {
      name: 'Credit Risk',
      icon: <TrendingUp className="w-5 h-5" />,
      color: 'bg-red-100 border-red-300',
      textColor: 'text-red-800',
      applications: ['Credit scoring syst√©m'],
      dataObjects: ['Osoba (klient / ≈æadatel)', 'Pravidlo', 'Scoringov√Ω model', 'Rozhodnut√≠', 'Sk√≥re'],
      capabilities: ['Tvorba a spr√°va scoring model≈Ø', 'Hodnocen√≠ √∫vƒõrov√Ωch rizik']
    },
    {
      name: 'BI oddƒõlen√≠',
      icon: <Database className="w-5 h-5" />,
      color: 'bg-indigo-100 border-indigo-300',
      textColor: 'text-indigo-800',
      applications: ['Reportovac√≠ n√°stroje', 'Datov√Ω sklad (DWH)', 'Self Service BI'],
      dataObjects: ['Fakta', 'Dimenze', 'Agregovan√© metriky', 'Reporty'],
      capabilities: ['Anal√Ωzy', 'Dashboardy', 'Reportov√°n√≠', 'Podpora rozhodov√°n√≠']
    },
    {
      name: 'IT oddƒõlen√≠',
      icon: <Server className="w-5 h-5" />,
      color: 'bg-gray-100 border-gray-300',
      textColor: 'text-gray-800',
      applications: ['Spr√°va dat API', '2 core syst√©my (star√Ω a nov√Ω)', 'Cloud infrastruktura'],
      dataObjects: ['Po≈æadavek', 'Autentizace', 'Konfigurace', 'P≈ô√≠stupov√° opr√°vnƒõn√≠'],
      capabilities: ['Provoz a spr√°va syst√©m≈Ø', '≈òe≈°en√≠ incident≈Ø', 'Bezpeƒçnost dat', 'Integrace syst√©m≈Ø']
    }
  ];

  const cLevelPositions = [
    { name: 'CCO', fullName: 'Chief Commercial Officer', color: 'bg-blue-50 border-blue-400' },
    { name: 'CHRO', fullName: 'Chief HR Officer', color: 'bg-purple-50 border-purple-400' },
    { name: 'CFO', fullName: 'Chief Financial Officer', color: 'bg-green-50 border-green-400' },
    { name: 'CIO', fullName: 'Chief Information Officer', color: 'bg-gray-50 border-gray-400' }
  ];

  const ccoStructure = [0, 1, 2];
  const chroStructure = [3, 4];
  const cfoStructure = [5, 6];
  const cioStructure = [7, 8];

  const DepartmentCard = ({ dept, index }) => {
    const isExpanded = expandedDepts.includes(index);

    const handleToggle = () => {
      setExpandedDepts(currentDepts =>
        currentDepts.includes(index)
          ? currentDepts.filter(id => id !== index)
          : [...currentDepts, index]
      );
    };

    return (
      <div className={`${dept.color} border-2 rounded-lg p-4 shadow-md hover:shadow-lg transition-all`}>
        <div
          className="flex items-center justify-between cursor-pointer"
          onClick={handleToggle}
        >
          <div className="flex items-center gap-2">
            <div className={dept.textColor}>
              {dept.icon}
            </div>
            <h3 className={`font-semibold ${dept.textColor}`}>{dept.name}</h3>
          </div>
          {isExpanded ?
            <ChevronUp className={`w-4 h-4 ${dept.textColor}`} /> :
            <ChevronDown className={`w-4 h-4 ${dept.textColor}`} />
          }
        </div>
        {isExpanded && (
          <div className="mt-3 space-y-3 text-xs">
            <div>
              <div className="font-bold text-gray-700 mb-1">üì± Aplikaƒçn√≠ vrstva:</div>
              <div className="text-gray-600 space-y-0.5">
                {dept.applications.map((app, i) => (
                  <div key={i}>‚Ä¢ {app}</div>
                ))}
              </div>
            </div>
            <div>
              <div className="font-bold text-gray-700 mb-1">üíæ Datov√© objekty:</div>
              <div className="text-gray-600 space-y-0.5">
                {dept.dataObjects.map((obj, i) => (
                  <div key={i}>‚Ä¢ {obj}</div>
                ))}
              </div>
            </div>
            <div>
              <div className="font-bold text-gray-700 mb-1">‚ö° Schopnosti:</div>
              <div className="text-gray-600 space-y-0.5">
                {dept.capabilities.map((cap, i) => (
                  <div key={i}>‚Ä¢ {cap}</div>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    );
  };

  const OrgStructurePage = () => {
    const areAllExpanded = expandedDepts.length === departments.length;
    const toggleAllDepts = () => {
      if (areAllExpanded) {
        setExpandedDepts([]);
      } else {
        setExpandedDepts(departments.map((_, index) => index));
      }
    };

    return (
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-2">MagicalMoney s.r.o.</h1>
          <p className="text-gray-600">Organizaƒçn√≠ struktura spoleƒçnosti</p>
          <p className="text-sm text-gray-500 mt-1">~100 zamƒõstnanc≈Ø | 8 oddƒõlen√≠</p>
          <p className="text-xs text-blue-600 mt-2">üí° Kliknƒõte na oddƒõlen√≠ pro zobrazen√≠ detail≈Ø</p>
          <div className="mt-6">
            <button
              onClick={toggleAllDepts}
              className="flex items-center gap-2 mx-auto bg-slate-200 hover:bg-slate-300 text-slate-800 font-semibold py-2 px-5 rounded-lg text-sm transition-colors shadow-sm"
            >
              <ChevronsUpDown className="w-4 h-4" />
              {areAllExpanded ? 'Zav≈ô√≠t v≈°echna oddƒõlen√≠' : 'Otev≈ô√≠t v≈°echna oddƒõlen√≠'}
            </button>
          </div>
        </div>
        <div className="flex justify-center mb-8">
          <div className="bg-gradient-to-br from-slate-700 to-slate-900 text-white px-8 py-6 rounded-lg shadow-lg border-2 border-slate-600">
            <div className="text-center">
              <div className="text-2xl font-bold">CEO</div>
              <div className="text-sm text-slate-300 mt-1">Chief Executive Officer</div>
            </div>
          </div>
        </div>
        <div className="flex justify-center mb-4">
          <div className="w-0.5 h-8 bg-gray-400"></div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {cLevelPositions.map((position, idx) => (
            <div key={idx} className="flex flex-col items-center">
              <div className={`${position.color} border-2 px-6 py-4 rounded-lg shadow-md w-full text-center`}>
                <div className="font-bold text-lg text-gray-800">{position.name}</div>
                <div className="text-xs text-gray-600 mt-1">{position.fullName}</div>
              </div>
              <div className="w-0.5 h-6 bg-gray-400 mt-2 hidden lg:block"></div>
            </div>
          ))}
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <div className="space-y-4">
            {ccoStructure.map((index) => (
              <DepartmentCard key={index} dept={departments[index]} index={index} />
            ))}
          </div>
          <div className="space-y-4">
            {chroStructure.map((index) => (
              <DepartmentCard key={index} dept={departments[index]} index={index} />
            ))}
          </div>
          <div className="space-y-4">
            {cfoStructure.map((index) => (
              <DepartmentCard key={index} dept={departments[index]} index={index} />
            ))}
          </div>
          <div className="space-y-4">
            {cioStructure.map((index) => (
              <DepartmentCard key={index} dept={departments[index]} index={index} />
            ))}
          </div>
        </div>
        <div className="mt-12 bg-white rounded-lg shadow-md p-6">
          <h3 className="font-bold text-lg mb-4 text-gray-800">Struktura ≈ô√≠zen√≠ a datov√° architektura</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
            <div><span className="font-semibold">CCO</span> - Obchodn√≠ oddƒõlen√≠ (Schvalov√°n√≠, Sales, Marketing)</div>
            <div><span className="font-semibold">CHRO</span> - Lidsk√© zdroje a z√°kaznick√° p√©ƒçe</div>
            <div><span className="font-semibold">CFO</span> - Finance a rizika (Payments, Credit Risk)</div>
            <div><span className="font-semibold">CIO</span> - Informaƒçn√≠ technologie a data</div>
          </div>
          <div className="mt-4 pt-4 border-t border-gray-200">
            <p className="text-xs text-gray-600">
              Ka≈æd√© oddƒõlen√≠ obsahuje: <span className="font-semibold">Aplikaƒçn√≠ vrstvu</span> (syst√©my a n√°stroje),
              <span className="font-semibold"> Datov√© objekty</span> (data s kter√Ωmi pracuje) a
              <span className="font-semibold"> Schopnosti</span> (kl√≠ƒçov√© funkce oddƒõlen√≠)
            </p>
          </div>
        </div>
      </div>
    );
  };

  const DWHArchitecturePage = () => (
    <div className="max-w-7xl mx-auto">
      <div className="text-center mb-12">
        <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-2">Architektura Datov√©ho Skladu</h1>
        <p className="text-gray-600">MagicalMoney s.r.o.</p>
      </div>
      <div className="space-y-6">
        <div className="border-2 border-blue-300 rounded-lg p-4 bg-blue-50">
          <h4 className="font-bold text-blue-900 mb-3">1. Zdrojov√© Syst√©my (Source Systems)</h4>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-xs">
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">HR management syst√©m</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">CRM, Web, PPC</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Spr√°va dat, Autentizace</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Port√°l, Platby, ERP</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Core syst√©m (Vym√°h√°n√≠)</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Credit Scoring</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Email/Komunikace</div>
            <div className="bg-white p-2 rounded border border-blue-200 text-gray-800">Reportovac√≠ N√°stroje</div>
          </div>
        </div>
        <div className="flex justify-center"><div className="text-center"><div className="text-2xl text-gray-400">‚Üì</div><div className="text-xs text-gray-600 font-semibold">Streaming & ETL/ELT</div></div></div>
        <div className="border-2 border-teal-300 rounded-lg p-4 bg-teal-50">
          <h4 className="font-bold text-teal-900 mb-2">2. ODS (Operational Data Store)</h4>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <div className="bg-white p-3 rounded border border-teal-200 text-center text-sm"><div className="font-bold text-teal-700 mb-1">Apache Kafka</div><div className="text-xs text-gray-600">Real-time streaming</div><div className="text-xs text-gray-600">Event-driven architecture</div></div>
            <div className="bg-white p-3 rounded border border-teal-200 text-center text-sm"><Database className="w-6 h-6 mx-auto mb-1 text-teal-700" /><div className="font-bold text-teal-800">ODS Database</div><div className="text-xs text-gray-600">Operaƒçn√≠ datov√© √∫lo≈æi≈°tƒõ</div></div>
          </div>
        </div>
        <div className="flex justify-center"><div className="text-center"><div className="text-2xl text-gray-400">‚Üì</div><div className="text-xs text-gray-600 font-semibold">ETL Processing</div></div></div>
        <div className="border-2 border-green-300 rounded-lg p-4 bg-green-50">
          <h4 className="font-bold text-green-900 mb-2">3. P≈ôechodov√° Vrstva (Stage Layer)</h4>
          <div className="bg-white p-3 rounded border border-green-200 text-center text-sm"><Database className="w-6 h-6 mx-auto mb-1 text-green-700" /><strong className="text-green-900">Staging Area</strong><div className="text-xs text-gray-600 mt-1">Doƒçasn√© √∫lo≈æi≈°tƒõ pro naƒçten√° data z ODS</div></div>
        </div>
        <div className="flex justify-center"><div className="text-center"><div className="text-2xl text-gray-400">‚Üì</div><div className="text-xs text-gray-600 font-semibold">Transformace & Load</div></div></div>
        <div className="border-2 border-purple-300 rounded-lg p-4 bg-purple-50">
          <h4 className="font-bold text-purple-900 mb-2">4. J√°dro DWH (DWH Core / EDW)</h4>
          <div className="bg-white p-3 rounded border border-purple-200 text-center text-sm"><Database className="w-8 h-8 mx-auto mb-1 text-purple-700" /><strong className="text-purple-900">Datov√Ω Sklad - J√°dro</strong><div className="text-xs text-gray-600 mt-1">Centr√°ln√≠ √∫lo≈æi≈°tƒõ v≈°ech podnikov√Ωch dat</div></div>
        </div>
        <div className="flex justify-center"><div className="text-center"><div className="text-2xl text-gray-400">‚Üì</div><div className="text-xs text-gray-600 font-semibold">Distribuce & Agregace</div></div></div>
        <div className="border-2 border-orange-300 rounded-lg p-4 bg-orange-50">
          <h4 className="font-bold text-orange-900 mb-3">5. Datov√° Tr≈æi≈°tƒõ (Data Marts)</h4>
          <div className="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-3">
            <div className="bg-white p-3 rounded border border-orange-200"><Database className="w-5 h-5 mb-2 text-orange-700" /><div className="font-semibold text-sm mb-1 text-orange-900">MART √öVƒöRY</div><div className="text-xs text-gray-600"> ‚Ä¢ ≈Ω√°dosti o p≈Øjƒçky<br /> ‚Ä¢ Platby a transakce<br /> ‚Ä¢ Vym√°h√°n√≠ DPD</div></div>
            <div className="bg-white p-3 rounded border border-orange-200"><Database className="w-5 h-5 mb-2 text-orange-700" /><div className="font-semibold text-sm mb-1 text-orange-900">MART RIZIKA</div><div className="text-xs text-gray-600"> ‚Ä¢ Credit scoring<br /> ‚Ä¢ Hodnocen√≠ rizik<br /> ‚Ä¢ Syst√©mov√° bezpeƒçnost</div></div>
            <div className="bg-white p-3 rounded border border-orange-200"><Database className="w-5 h-5 mb-2 text-orange-700" /><div className="font-semibold text-sm mb-1 text-orange-900">MART OBCHOD</div><div className="text-xs text-gray-600"> ‚Ä¢ Kampanƒõ & marketing<br /> ‚Ä¢ Z√°kaznick√° akvizice<br /> ‚Ä¢ Analytika & reporty</div></div>
            <div className="bg-white p-3 rounded border border-purple-200 bg-purple-50"><Database className="w-5 h-5 mb-2 text-purple-700" /><div className="font-semibold text-sm mb-1 text-purple-900">MART HR</div><div className="text-xs text-gray-600"> ‚Ä¢ Zamƒõstnanci & mzdy<br /> ‚Ä¢ ≈†kolen√≠ & rozvoj<br /> ‚Ä¢ P≈ô√≠stupov√° opr√°vnƒõn√≠</div></div>
          </div>
        </div>
        <div className="flex justify-center"><div className="text-center"><div className="text-2xl text-gray-400">‚Üì</div><div className="text-xs text-gray-600 font-semibold">Anal√Ωza & Vizualizace</div></div></div>
        <div className="border-2 border-indigo-300 rounded-lg p-4 bg-indigo-50">
          <h4 className="font-bold text-indigo-900 mb-3">6. Aplikaƒçn√≠ Vrstva (N√°stroje)</h4>
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm">
            <div className="bg-white p-3 rounded border border-indigo-200 text-center"><strong className="text-indigo-900">BI Reports a Dashboardy</strong></div>
            <div className="bg-white p-3 rounded border border-indigo-200 text-center"><strong className="text-indigo-900">Self-Service BI</strong></div>
            <div className="bg-white p-3 rounded border border-indigo-200 text-center"><strong className="text-indigo-900">Data Mining/Scoring</strong></div>
          </div>
        </div>
        <div className="mt-4 p-3 bg-gray-100 rounded-lg border border-gray-300 text-center"><div className="font-bold text-gray-800">üìã Metadata Management</div><div className="text-xs text-gray-600 mt-1">≈ò√≠d√≠ celou architekturu DWH</div></div>
      </div>
    </div>
  );
  
  const InmonModelPage = () => {
    // K√≥d diagramu z≈Øst√°v√° pro referenci p≈ôi obhajobƒõ
    const diagramCode = `@startuml
' === Stylov√°n√≠ ===
skinparam {
    shadowing true
    RoundCorner 15
    BackgroundColor #FFFFFF
    TitleFontColor #1E293B
    TitleFontSize 20
    TitleFontName Helvetica
    ArrowColor #64748B
    ArrowThickness 1.5
    FontName Helvetica
    FontSize 12
}
skinparam class {
    BackgroundColor #F8FAFC
    BorderColor #94A3B8
    BorderThickness 2
    HeaderBackgroundColor #E0E7FF
    FontColor #334155
    FontSize 12
}
hide methods
hide stereotypes
title Inmon Model ‚Äì Core Data Warehouse Layer

' === ƒå√≠seln√≠ky ===
class Payment_Method { ... }
class Location { ... }
class Store { ... }
' === Master data ===
class Customers { ... }
' === Transakƒçn√≠ data ===
class Order_Detail { ... }
class Invoice { ... }
' === Vztahy ===
Payment_Method "1" -- "0..*" Order_Detail : payment_method_code
Store "1" -- "0..*" Order_Detail : store_id
Location "1" -- "0..*" Store : location_id
Customers "1" -- "0..*" Order_Detail : customer_id
Order_Detail "1" -- "1..*" Invoice : so_line_id
@enduml`;

    return (
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-2">Datov√Ω Model (Inmon)</h1>
          <p className="text-gray-600">Core vrstva datov√©ho skladu</p>
        </div>

        <div className="bg-white p-4 sm:p-6 rounded-lg shadow-md border">
          {/* ZMƒöNA: Pou≈æ√≠v√°me naimportovan√Ω obr√°zek */}
          <img src={dwhDiagram} alt="Inmon Model DWH Diagram" className="max-w-5xl h-auto mx-auto" />
        </div>
      </div>
    );
  };
  
  const PageRenderer = () => {
    switch (currentPage) {
      case 'org':
        return <OrgStructurePage />;
      case 'dwh':
        return <DWHArchitecturePage />;
      case 'inmon':
        return <InmonModelPage />;
      default:
        return <OrgStructurePage />;
    }
  };

  return (
    <div className="w-screen min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-4 sm:p-8">
      <div className="max-w-7xl mx-auto mb-8">
        <div className="flex justify-center gap-4 flex-wrap">
          <button
            onClick={() => setCurrentPage('org')}
            className={`px-6 py-3 rounded-lg font-semibold transition-all ${currentPage === 'org' ? 'bg-slate-700 text-white shadow-lg' : 'bg-white text-gray-700 hover:bg-gray-100 shadow'}`}
          >
            üìä Organizaƒçn√≠ struktura
          </button>
          <button
            onClick={() => setCurrentPage('dwh')}
            className={`px-6 py-3 rounded-lg font-semibold transition-all ${currentPage === 'dwh' ? 'bg-slate-700 text-white shadow-lg' : 'bg-white text-gray-700 hover:bg-gray-100 shadow'}`}
          >
            üóÑÔ∏è Architektura DWH
          </button>
          <button
            onClick={() => setCurrentPage('inmon')}
            className={`px-6 py-3 rounded-lg font-semibold transition-all ${currentPage === 'inmon' ? 'bg-slate-700 text-white shadow-lg' : 'bg-white text-gray-700 hover:bg-gray-100 shadow'}`}
          >
            üß¨ Datov√Ω model (Inmon)
          </button>
        </div>
      </div>
      
      <PageRenderer />
    </div>
  );
};

export default MagicalMoneyDashboard;